apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cf-token-metadata-registry.fullname" . }}
  labels:
    {{- include "cf-token-metadata-registry.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.rwReplicaCount }}
  selector:
    matchLabels:
      {{- include "cf-token-metadata-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cf-token-metadata-registry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          env:
#            - name: SPRING_PROFILES_ACTIVE
#              value: {{ .springProfiles }}

            ## Postgres
            - name: DB_DRIVER
              value: "org.postgresql.Driver"
            - name: DB_DIALECT
              value: "org.hibernate.dialect.PostgreSQLDialect"
            - name: POSTGRES_HOST
              value: {{ .Values.postgres.host }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.dbName }}
            - name: DB_SCHEMA
              value: {{ .Values.dbSchema | default "public" }}
            - name: DB_URL
              value: jdbc:postgresql://$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?currentSchema=$(DB_SCHEMA)
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.userKey }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.hostKey }}

            - name: STORE_CARDANO_HOST
              value: {{ .Values.cardano.node.host }}
            - name: STORE_CARDANO_PORT
              value: {{ .Values.cardano.node.port | quote }}

            # Scheduled Task to update
            - name: TOKEN_METADATA_SYNC_JOB
              value: {{ .Values.api.tokenMetadataUpdateJob.enabled | quote }}

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
